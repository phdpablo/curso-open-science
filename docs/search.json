[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Artigo à Prova de Futuro",
    "section": "",
    "text": "Home 🏢\nPágina do curso “Artigo à Prova de Futuro: Jornada de Open Science na Prática”. Aqui você encontrará informações sobre o programa do curso, materiais para seu acompanhamento e sugestões de leituras sobre a prática da ciência aberta (artigos, notas de aulas, blogs, vídeos, etc.).\nCaso você caiu nessa página por acaso (🤣😁😉), saiba que o poderá se inscrever no curso aqui: independente se ele estiver acontecendo no momento, será convidado a participar da próxima versão.",
    "crumbs": [
      "Home 🏢"
    ]
  },
  {
    "objectID": "index.html#sec-instrutor",
    "href": "index.html#sec-instrutor",
    "title": "Artigo à Prova de Futuro",
    "section": "Sobre os instrutores",
    "text": "Sobre os instrutores\nO curso é coordenado e ministrado por Pablo Rogers, doutor em administração pela Universidade de São Paulo (FEA/USP) e professor de finanças e métodos quantitativos desde 2005. Em sua página de perfil do Github temos informações de seus trabalhos recentes, e no seu site pessoal, detalhes sobre suas formações, competências, trajetória e projetos.\nNa sua versão atual o curso também será ministrado por Ricardo Limongi, doutor em administração pela Fundação Getúlio Vargas (FGV-SP) e professor de marketing e métodos quantitativos desde 2008 e atual editor chefe da Brazilian Administration Review (BAR). Em seu perfil do Instagram é possível acompanhar sua agenda de atividades, cursos e palestras sobre inteligência artificial aplicada aos negócios e pesquisa. Em seu canal do YouTube, é possível encontrar vídeos das suas atividades: congressos, palestras, aulas, etc.",
    "crumbs": [
      "Home 🏢"
    ]
  },
  {
    "objectID": "index.html#sec-about",
    "href": "index.html#sec-about",
    "title": "Artigo à Prova de Futuro",
    "section": "Sobre o curso",
    "text": "Sobre o curso\nO curso tem objetivo de introduzir os conceitos relacionados com a ciência aberta e a prática da pesquisa reprodutível. O curso aborda temas introdutórios sobre ciência aberta, com foco no ferramental disponível para tornar a pesquisa mais transparente, reprodutível e acessível. O curso é voltado para pesquisadores e estudantes de pós-graduação, mas aberto a qualquer pessoa interessada em aprender sobre a prática da ciência aberta. O protagonista do curso é o pesquisador brasileiro que deseja aprimorar a qualidade e a transparência de sua pesquisa, e que busca ferramentas para tornar-lá mais eficiente e acessível.\nTrata-se de um curso intermitente programado para acontecer em 4 encontros de 4 horas/aula (ou 8 encontros de 2 horas/aula), totalizando 16 horas/aula. Num primeiro momento, a ideia que o curso seja remoto e síncrono para alcançar um número maior de interessados. Ele poderá acontecer mais de uma vez no ano, com datas e horários a serem definidos. Para o calendário atual do curso, consulte a seção Agenda.\nO curso é gratuito e com de certificado de extensão pela Universidade Federal de Uberlândia (UFU). As inscrições são feitas por meio de um formulário intermediado pelo projeto Psico&Econo_METRIA. Quando da previsão das datas, uma campanha de e-mail marketing divulgará o link para a inscrição através de coordenações de pós-graduações selecionadas.\nAs vagas são limitadas e a seleção será feita por ordem de inscrição. Após o preenchimento das vagas, os demais interessados serão inscritos automaticamente numa lista de espera e, tempestivamente, serão avisados sobre a próxima edição do curso. Após selecionados, os inscritos receberão um e-mail com instruções para acesso à plataforma de aulas síncronas e para a realização das atividades prévias ao curso.",
    "crumbs": [
      "Home 🏢"
    ]
  },
  {
    "objectID": "index.html#sec-ementa",
    "href": "index.html#sec-ementa",
    "title": "Artigo à Prova de Futuro",
    "section": "Ementa do curso",
    "text": "Ementa do curso\nIntrodução da Ciência Aberta / Repositórios da Ciência Aberta / Gerenciamento de Referências e Bibliotecas / Gestão de Dados e Projetos / Controle de Versão / Documentos Reprodutíveis / Controle de Ambiente (containers) / IA Aplicada à Pesquisa Científica.",
    "crumbs": [
      "Home 🏢"
    ]
  },
  {
    "objectID": "index.html#sec-method",
    "href": "index.html#sec-method",
    "title": "Artigo à Prova de Futuro",
    "section": "Metodologia",
    "text": "Metodologia\nNum primeiro momento, o curso foi concebido para acontecer de forma remota e síncrona, com aulas expositivas e teóricas, porém em grande medida, o conteúdo é essencialmente prático. Algumas aulas poderão ser gravadas e disponibilizadas no canal do YouTube do projeto Psico&Econo_METRIA, mas a intenção é que o conteúdo principal seja síncrono, para uma maior interação entre os participantes.\nNesse sentido, o material do curso organizado nessa página refere-se ao roteiro estruturado de tudo que se vê nas aulas síncronas e conteúdos adicionais (bibliografia, notas de aulas, links, etc).\nA proposta do curso busca seguir de perto a mensagem de Dogucu & Çetinkaya-Rundel (2022). Nesse artigo as autoras abordam a importância da reprodutibilidade na ciência de dados, tanto na pesquisa quanto no ensino. Elas recomendam que os professores-pesquisadores adotem fluxos de trabalho reprodutíveis em suas pesquisas e ensinem esses fluxos de trabalho aos seus alunos. Elas propõem uma dimensão para as práticas de reprodutibilidade, focada exclusivamente nas ferramentas para o ensino (todos os materiais de ensino devem ser computacionalmente reprodutíveis, bem documentados e abertos).\n\nArtigo à Prova de Futuro: Jornada de Open Science na Prática by Pablo Rogers is licensed under CC BY-NC-SA 4.0\n\n\n\n\n\nDogucu, M., & Çetinkaya-Rundel, M. (2022). Tools and Recommendations for Reproducible Teaching. Journal of Statistics and Data Science Education, 30(3), 251–260. https://doi.org/10.1080/26939169.2022.2138645",
    "crumbs": [
      "Home 🏢"
    ]
  },
  {
    "objectID": "00-prework.html",
    "href": "00-prework.html",
    "title": "Pré-requisitos 📇",
    "section": "",
    "text": "Github\nPrimeiramente, se cadastre no Github: https://github.com/signup, pois com ele você poderá acessar o material do curso e interagir com os demais participantes. E com a conta do Github você também poderá se cadastrar em outras plataformas, como o Zenodo, OSF, etc. Algumas features que aprenderemos no curso exigem o vínculo entre as contas. Se for professor ou estudante, você pode solicitar o GitHub Education e ter acesso, por exemplo, ao Copilot, uma das ferramentas de IA que abordaremos no último módulo. Por isso, é importante que você se cadastre com um e-mail institucional. Use o mesmo e-mail para se cadastrar em todas plataformas.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-gitprework",
    "href": "00-prework.html#sec-gitprework",
    "title": "Pré-requisitos 📇",
    "section": "Git",
    "text": "Git\nGithub não é a mesma coisa que Git. O Github é uma plataforma, e o Git é uma ferramenta. Instale a versão mais recente do Git: https://git-scm.com/downloads. O Git é uma ferramenta de controle de versão, e o Github é uma plataforma que utiliza o Git. O Git é uma ferramenta essencial para a prática da ciência aberta, e é uma das ferramentas mais importantes para o pesquisador que deseja tornar sua pesquisa mais transparente e reprodutível.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-zoteroprework",
    "href": "00-prework.html#sec-zoteroprework",
    "title": "Pré-requisitos 📇",
    "section": "Zotero",
    "text": "Zotero\nBaixe a versão mais recente do Zotero: https://www.zotero.org/download/ e cadastre uma conta: https://www.zotero.org/user/register/. Vamos discutir sobre o Zotero e diversos plugins que são úteis no dia-a-dia do pesquisador. Atualmente, o Zotero é a ferramenta mais completa para gerenciamento de referências e bibliotecas, e se integra nativamente com o RStudio.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-osfprework",
    "href": "00-prework.html#sec-osfprework",
    "title": "Pré-requisitos 📇",
    "section": "OSF",
    "text": "OSF\nCadastre no Open Science Framework (OSF): https://osf.io/register/. Como veremos, essa plataforma é uma das mais importantes para a prática da ciência aberta. Ela está no começo (pré-registro) e no final (repositório de dados e pré-print) do ciclo de vida (workflow) de um projeto de pesquisa.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-zenodoprework",
    "href": "00-prework.html#sec-zenodoprework",
    "title": "Pré-requisitos 📇",
    "section": "Zenodo",
    "text": "Zenodo\nApesar do Zenodo cumprir funções similares ao OSF e até mesmo ao Github, ele é mais voltado para a publicação de dados e publicações científicas. Cadastre no Zenodo: https://zenodo.org/login/ e víncule sua conta com o Github. Isso será útil, principalmente, para geração de DOI de repositórios do Github.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-rstudioprework",
    "href": "00-prework.html#sec-rstudioprework",
    "title": "Pré-requisitos 📇",
    "section": "RStudio",
    "text": "RStudio\nBaixe a versão mais recente do RStudio: https://posit.co/download/rstudio-desktop/. O RStudio é uma Integrated Development Environment (IDE) para a linguagem R. O RStudio é uma ferramenta essencial para a prática da ciência aberta em R, pois integra as principais soluções que abordaremos no curso (Zotero, Quarto, Git/Github, etc.). A empresa RStudio recentemente mudou o nome para Posit, com o objetivo refletir melhor a expansão da empresa para além do desenvolvimento de ferramentas para R, incluindo Python e outras linguagens. Nesse mesmo link você pode baixar o R, que é a linguagem de programação que utilizaremos no curso.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-quartoprework",
    "href": "00-prework.html#sec-quartoprework",
    "title": "Pré-requisitos 📇",
    "section": "Quarto",
    "text": "Quarto\nBaixe a versão mais recente do Quarto: https://www.quarto.org/. O Quarto é uma linguagem de marcação que permite a criação de documentos reprodutíveis e dinâmicos. Ele é uma evolução e tende a substituir o RMarkdown, que é a principal linguagem de marcação do R. O Quarto engloba e adiciona diversas outras vantagens ao RMarkdown, tal como a possibilidade de criar documentos reprodutíveis em Python, Julia, etc. Se você já tem algum conhecimento de RMarkdown, não se preocupe, pois o Quarto é uma extensão natural.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-prework.html#sec-dockerprework",
    "href": "00-prework.html#sec-dockerprework",
    "title": "Pré-requisitos 📇",
    "section": "Docker",
    "text": "Docker\nBaixe a versão mais recente do Docker: https://www.docker.com/products/docker-desktop. Nesse mesmo link você cria uma conta. O Docker é uma plataforma para desenvolvimento, envio e execução de aplicativos. O Docker é uma ferramenta essencial para a prática da ciência aberta, pois permite a criação de ambientes reprodutíveis.",
    "crumbs": [
      "Pré-requisitos 📇"
    ]
  },
  {
    "objectID": "00-schedule.html#footnotes",
    "href": "00-schedule.html#footnotes",
    "title": "Agenda 📅",
    "section": "",
    "text": "Na primeira edição do curso a equipe organizadora decidiu não publicar as aulas. Elas estarão disponíveis apenas privativamente para os inscritos no curso, através da platorma de reuniões adotada (Microsoft Teams). No futuro, quando o coordenador considerar que o curso esteja efetivamente formatado, as aulas gravadas serão publicadas no canal Psico&Econo_METRIA↩︎",
    "crumbs": [
      "Agenda 📅"
    ]
  },
  {
    "objectID": "01-intro.html#footnotes",
    "href": "01-intro.html#footnotes",
    "title": "1  Introdução à Ciência Aberta",
    "section": "",
    "text": "O texto apresentado nessa seção é uma compilação de fragmentos do Projeto APQ-01225-24 submetido ao Edital Nº 001/2024 - Demanda Universal, da FAPEMIG, ainda em análise. O detalhamento desse projeto, quando se tornar público, poderá ser acompanhado no OSF: Rogers, P., Limongi, R., & Barboza, F. (2024, May 29). The Practice of Open Science in Brazil. Retrieved from osf.io/dnrgf↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introdução à Ciência Aberta</span>"
    ]
  },
  {
    "objectID": "02-osf.html",
    "href": "02-osf.html",
    "title": "2  Repositórios da Ciência Aberta",
    "section": "",
    "text": "2.1 Open Science Framework (OSF)\nO material utilizado nesse módulo do curso segue de perto a proposta de Olson et al. (2022), um projeto oficial do COS que possui recursos, modelos e práticas para ajudar os pesquisadores a iniciar sua jornada OSF. Claro que ele foi adaptado para nossos fins, principalmente, em decorrência do tempo destinado ao módulo.\nPara os alunos que desejam uma leitura sobre o OSF na prática, indico os artigos de Sullivan et al. (2019) e Soderberg (2018). Apesar de o leitor poder encontrar prints das telas da plataforma desatualizadas, esses dois artigos podem ser um bom começo para entender a lógica da plataforma. E off course, recomendo fortemente você dar uma olhada no suporte do OSF, onde podemos encontrar vídeos introdutórios excelentes.\nEsse curso poderia ter sido concebido e gerenciado dentro do OSF, no entanto, devido a proposta de apresentarmos também o Git/Github e sua integração com documentos reprodutíveis no RStudio/Quarto (como esse que está lendo 😁), optamos por priorizar o repositório do Github. Por isso, que também nesse módulo passamos pelo Zenodo, que integra com o Github e tem a capacidade de gerar DOIs para as versões dos repositórios.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Repositórios da Ciência Aberta</span>"
    ]
  },
  {
    "objectID": "02-osf.html#open-science-framework-osf",
    "href": "02-osf.html#open-science-framework-osf",
    "title": "2  Repositórios da Ciência Aberta",
    "section": "",
    "text": "Bifurcando ou duplicando um projeto\n\n\n\n\n\nVocê sabia que é possível executar um “forking” (criar uma cópia do projeto existente) ou “duplicate as template” (duplicar apenas a estrutura do projeto e seus componentes) de um projeto público no OSF?\nVocê que se interessa em iniciar seu próprio projeto OSF com um modelo, pode criar sua própria duplicata do projeto Olson et al. (2022) para começar!\nNeste projeto, existem templates e recursos básicos para diversos casos de uso encontrados no OSF; coordenação de equipes de pesquisa, planejamento de gerenciamento de dados, documentos reprodutíveis e até mesmo gerenciamento de cursos.\n\n\n\n\n\n\n\n\n\n\n\nSullivan et al. (2019) Reading Note (Tip 1)\n\n\n\n\n\nO artigo apresenta um protocolo para a implementação de práticas de Ciência Aberta (CA), com foco no uso do Open Science Framework (OSF). As principais ideias do texto são as seguintes:\n\nA CA é um movimento que promove a transparência, a reprodutibilidade e a acessibilidade dos resultados de pesquisa;\nAs práticas de CA podem contribuir para a melhoria da qualidade da pesquisa científica, tornando-a mais confiável e robusta;\nO OSF é uma plataforma gratuita e de código aberto que pode ser usada para implementar práticas de CA;\n\nO protocolo apresentado no texto fornece instruções passo a passo para as seguintes práticas de CA:\n\nPlanejamento de gerenciamento de dados: O planejamento de gerenciamento de dados é essencial para garantir que os dados de pesquisa sejam armazenados, organizados e gerenciados de forma eficiente e eficaz. O OSF fornece ferramentas para ajudar os pesquisadores a planejar e implementar seus planos de gerenciamento de dados.\nPré-registro de estudos: O pré-registro de estudos é uma prática que consiste em publicar um plano de pesquisa antes de iniciar o estudo. Isso ajuda a garantir que o estudo seja realizado de forma objetiva e transparente. O OSF fornece um recurso para pré-registrar estudos.\nControle de versão: O controle de versão é uma prática que consiste em rastrear as alterações feitas em arquivos de texto. Isso ajuda a garantir que os resultados de pesquisa sejam reprodutíveis e que as alterações feitas nos dados sejam rastreáveis. O OSF fornece ferramentas para gerenciar o controle de versão de arquivos de pesquisa.\nCompartilhamento de dados e materias: O compartilhamento de dados e materiais de pesquisa é uma prática importante para aumentar a transparência e a reprodutibilidade da pesquisa. O OSF fornece um repositório para compartilhar dados e materiais de pesquisa.\nPublicação de pré-impressões: As pré-impressões são versões preliminares de artigos científicos que são publicadas online antes de serem revisados por pares. As pré-impressões podem ajudar a acelerar a divulgação da pesquisa e a promover o debate científico. O OSF fornece um repositório para publicar pré-impressões.\n\nO artigo fornece informações valiosas para os pesquisadores que desejam implementar práticas de CA. O protocolo apresentado pode ser usado como um guia para implementar essas práticas de forma eficaz.\n\n\n\n\n\n\n\nOlson, E., Pfeiffer, N., Call, M., & Steger, D. (2022). Getting Started on OSF. https://doi.org/10.17605/OSF.IO/YAQE8\n\n\nSoderberg, C. K. (2018). Using OSF to Share Data: A Step-by-Step Guide. Advances in Methods and Practices in Psychological Science, 1(1), 115–120. https://doi.org/10.1177/2515245918757689\n\n\nSullivan, I., DeHaven, A., & Mellor, D. (2019). Open and Reproducible Research on Open Science Framework. Current Protocols Essential Laboratory Techniques, 18(1), e32. https://doi.org/10.1002/cpet.32",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Repositórios da Ciência Aberta</span>"
    ]
  },
  {
    "objectID": "03-zotero.html#footnotes",
    "href": "03-zotero.html#footnotes",
    "title": "3  Gerenciamento de Referências e Bibliotecas",
    "section": "",
    "text": "Esta lista no Wikipedia, que é atualizada constantemente, faz uma comparação entre eles.↩︎\nOutro importante plugin é a integração com o SciHub (Behera & Jain, 2023). Coloquei essa informação em nota, pois ele é questionável do ponto de vista ético (😬🫣), apesar de extensivamente utilizado no Brasil por estudantes de pós-graduação stricto sensu de diferentes áreas (Oddone & Souza, 2024). Ou se enxergarmos o problema sob outro ponto de vista, a ampla adoção do SciHub no Brasil e em todo o mundo reflete a resposta dos cientistas ao desgastado sistema de comunicação científica mantido pelas editoras internacionais. Além disso, reforça a relevância dos princípios da Ciência Aberta (Oddone & Souza, 2024).↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Gerenciamento de Referências e Bibliotecas</span>"
    ]
  },
  {
    "objectID": "05-git.html#footnotes",
    "href": "05-git.html#footnotes",
    "title": "5  Controle de versão",
    "section": "",
    "text": "A literatura sobre controle de versão, especialmente Git e Github, é “farta”. Tanto em inglês como em português. Uma pesquisa simples vai achar muitas referências a blogs e textos de profissionais especializados, inclusive, para os nossos fins. No Youtube existem muitos vídeos sobre o tema. Seja o que eu escrevesse por aqui, seria de pouca contribuição. Dessa forma, busquei contextualizar o versionamento de arquivos num empreendimento de pesquisa de meu dia a dia: um pesquisador com viés quantitativo, envolvido em pesquisas sem pouca colaboração, mas que achou no controle de versão uma solução impar para diversas demandas preconizadas pela Ciência Aberta.↩︎\nComo ressaltei na nota anterior… minha impressão era que não havia nada para dizer sobre o tema, haja vista a vasta literatura. Desse modo, resolvi fazer um experimento e nessa nota documento para vocês. Dentro do enredo que adotei para a aula e o roteiro dessa seção, conversei com o ChatGPT 4o (em 2024-06-19) e me apropriei de alguns de seus argumentos para escrever o resto dessa seção. Claro, com muitos, mas muitos ajustes! Inclusive, a parte final dessa seção, onde conversamos sobre um hipotético workflow (Gitflow) para uma colaboração científica é de minha propriedade. Seguem minhas prompts:\n\nSou pesquisador em ciências sociais aplicadas e estou escrevendo um artigo em que discuto o controle de versão, através do Git e Github, como um importante aliado das boas práticas da Ciência Aberta. Comecei contextualizando os controles de versionamento mais simples, tais como o controle de alterações de um processador de texto e histórico de versões de soluções de armazenamento nas nuvens. Me indique situações em que esses tipos de versionamentos não atendem um fluxo de trabalho de uma pesquisa empírica no contexto da ciência aberta.\n\nContinuando a conversa…\n\nNo meu enredo argumento que o Git e Github são “coisas” diferentes e o pesquisador, se quiser, desenvolve seu workflow apenas localmente com o Git. Compare o Git e Github em termos de soluções propostas para o versionamento para eu apresentar como exemplo de meus argumentos.\n\nContinuando a conversa…\n\nCerto, gostei da comparação, mas gostaria que desenvolvesse sua resposta na forma de um texto descritivo e não na forma de bullets points.\n\nContinuando a conversa…\n\nCerto, era exatamente isso que precisava para meus argumentos nesse ponto do artigo. No entanto, desejo finalizar com o seguinte enredo: o Git/Github são preparados para projetos muito complexos (cite cases para exemplificar esse argumento), mas suas funcionalidades também podem atender projetos de pesquisas mais simples que envolvam três pesquisadores ou um único pesquisador. Preciso de sua ajuda para desenvolver esses argumentos sem você repetir argumentos que já apresentou para mim nessa conversa.\n\n↩︎",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Controle de versão</span>"
    ]
  },
  {
    "objectID": "06-quarto.html",
    "href": "06-quarto.html",
    "title": "6  Documentos Reprodutíveis",
    "section": "",
    "text": "Você pode ter chegado até aqui e pensado: esse negócio de reprodutibilidade e transparência não é para mim! Eu sou um pesquisador qualitativo e não tenho nada a ver com essas “coisas” de código e programação. Talvez a aula de Git te assustou! Se você pensou isso, eu tenho uma boa notícia: você está enganado! A reprodutibilidade e a transparência são para todos os pesquisadores, independentemente da abordagem metodológica que você adote. E, para provar isso, eu vou mostrar como você pode usar o Quarto, através do RStudio, para organizar e documentar o seu projeto de pesquisa, mesmo que qualitativo.\nDe qualquer forma, como refletimos até a penúltima seção, talvez dominar a plataforma OSF, o Zotero e um protocolo rígido de organização de dados e projetos (vide Protocolo TIER, por exemplo) seja suficiente para você. A integração dessas soluções com outras que você já utiliza no dia a dia (armazenamento nas nuvens, processadores de texto, softwares específicos de análise qualitativa, etc) já lhe capacita para ter um projeto de pesquisa organizado e documentado com boas práticas da Ciência Aberta (CA).\nOu talvez você, mesmo sendo um pesquisador que utiliza métodos quantitativos, empregue o mesmo argumento: eu nem gosto dessas “coisas” de código e programação. Prefiro soluções point-and-click, tal como o SPSS e Stata! Tenho uma boa notícia para você também: existem dois outros softwares com essa funcionalidade e boa compatilidade com os princípios da CA: o JASP e o Jamovi.\nPrimeiramente, os dois são softwares gratuitos e de código aberto. Segundo, ambos possuem uma interface gráfica amigável e intuitiva, que permite a execução de análises estatísticas sem a necessidade de programação. Terceiro, em ambos os outputs das análises ficam disponíveis, quando salvos, no mesmo arquivo da base de dados. Através da tela dos outputs o usuário pode editar os títulos, adicionar notas, copiar as citações dos pacotes do R que estão sendo utilizados, copiar as análises para edição em outros softwares e duplicar as análises (Rogers, 2024). Essas últimas funcionalidades são extremamente úteis para a reprodutibilidade.\nNo entanto, ambos os softwares ainda são recentes e ainda não englobam todas as análises dos softwares mais tradicionais, como o SPSS e o Stata. Eles não possuem a mesma quantidade de pacotes do R, o que pode ser um limitante para pesquisadores que necessitam de análises mais complexas. Os dois carecem de funcionalidades para a organização e estruturação dos dados, ficando o ETL (Extration, Transform and Loading) a cargo de outros softwares, colocando dificuldade ao controle de versões, De qualquer forma, acredito que a tendência é que esses softwares evoluam e se tornem mais populares, principalmente entre pesquisadores que não têm familiaridade com a programação.\nDe qualquer forma, o foco dessa seção é mostrar como você pode usar o Quarto para documentos dinâmicos, independente se você é um pesquisador qualitativo ou quantitativo, que prefere ou não usar recursos point-and-click. O Quarto é uma ferramenta de código aberto que permite a criação de documentos dinâmicos, tal como o R Markdown, mas com uma interface gráfica mais amigável e intuitiva. Através do Quarto, você pode criar documentos dinâmicos com texto, imagens, tabelas, gráficos, equações, referências bibliográficas, etc. E, o melhor de tudo, você pode fazer isso com pouca necessidade de programação, caso seu interesse seja apenas utilizar o Quarto como editor de documentos dinâmicos, ou seja, somente para escrever e organizar seu projeto de pesquisa.\nO Quarto é integrado ao RStudio, o que facilita a sua utilização por pesquisadores que já estão familiarizados com o R. Através do RStudio, você pode criar, editar e renderizar documentos dinâmicos em Quarto. Entretando, o Quarto integra várias linguagens de programação (R, Python, Julia e Observable). No RStudio, os usuários escrevem seus códigos e análises em R e Python, e o Quarto processa esse conteúdo e exporta o resultado em diferentes formatos, como HTML, PDF e DOCX, facilitando a disseminação e o compartilhamento do trabalho em múltiplas plataformas, como é ilustrado na Figura 6.1.\n\n\n\n\n\n\nFigura 6.1: Integração do Quarto\n\n\n\n\n\n\n\n\n\nO que o ChatGPT 4o nos diz sobre a Figura 6.1?\n\n\n\n\n\n\nMúltiplas Linguagens de Programação:\n\nNo lado esquerdo da imagem, temos ícones representando várias linguagens de programação e plataformas suportadas pelo Quarto, incluindo:\n\nR: Linguagem popular para análise estatística e visualização de dados.\nPython: Linguagem versátil utilizada em ciência de dados, aprendizado de máquina, entre outras áreas.\nJulia: Linguagem de programação de alto desempenho para computação técnica.\nObservable: Plataforma para criar visualizações de dados interativas.\n\nO texto “+ more!” indica que o Quarto suporta outras linguagens além das mencionadas.\n\nQuarto:\n\nNo centro da imagem, há um círculo azul com o logo do Quarto, representando a ferramenta em si.\nQuarto atua como uma plataforma de integração, permitindo que os usuários combinem códigos de diferentes linguagens e criem documentos ricos em conteúdo.\n\nExportação para Diversos Formatos:\n\nÀ direita, a imagem mostra os diferentes formatos para os quais o Quarto pode exportar:\n\nHTML: Para visualização web.\nPDF: Para documentos portáteis e impressos.\nWord (DOCX): Para edição e compartilhamento em formato de texto.\n\nO texto “+ more!” indica que o Quarto pode exportar para outros formatos além dos ilustrados.\n\n\n\n\n\nA Figura 6.2 explica o fluxo de trabalho um pouco mais analítico de criação e publicação de documentos com Quarto. Inicia-se com um arquivo .qmd que é processado por ferramentas como knitr ou Jupyter para gerar um arquivo Markdown. Esse arquivo Markdown é então convertido pelo Pandoc para os formatos finais de saída, permitindo uma ampla flexibilidade na distribuição do conteúdo.\n\n\n\n\n\n\nFigura 6.2: Workflow analítico do Quarto\n\n\n\n\n\n\n\n\n\nO que o ChatGPT 4o nos diz sobre a Figura 6.2?\n\n\n\n\n\n\nDocumentos Quarto (qmd):\n\nO processo começa com um documento no formato Quarto Markdown (qmd), que é um arquivo que pode conter texto, código e outros elementos dinâmicos.\n\nProcessamento com knitr ou Jupyter:\n\nA próxima etapa do fluxo envolve a escolha de um processador para converter o conteúdo do documento qmd:\n\nknitr: Um pacote no R que permite a integração de código e texto, frequentemente usado para documentos R Markdown.\nJupyter: Um ambiente interativo de notebooks que suporta várias linguagens de programação, como Python.\n\nA imagem mostra que o documento qmd pode ser processado por qualquer uma dessas ferramentas, resultando em um documento Markdown intermediário (md).\n\nMarkdown (md):\n\nApós o processamento inicial, o documento é convertido em um arquivo Markdown padrão (md). Este arquivo contém o texto e as marcações, mas ainda precisa ser convertido para o formato de saída final desejado.\n\nConversão com Pandoc:\n\nO arquivo Markdown é então processado pelo Pandoc, uma ferramenta poderosa de conversão de documentos. Pandoc é capaz de transformar arquivos Markdown em uma variedade de formatos de saída.\nA imagem retrata o Pandoc como uma máquina que processa o documento md e o converte para os formatos finais.\n\nFormatos de Saída:\n\nO resultado final do processo pode ser exportado para diversos formatos, conforme ilustrado na imagem:\n\nHTML: Para publicação na web.\nPDF: Para distribuição de documentos portáveis e impressos.\nWord (DOCX): Para edição e compartilhamento em formato de texto.\n\nNovamente, o texto “+ more!” indica que o Pandoc pode converter os documentos para outros formatos além dos mencionados.\n\n\n\n\n\nSe quisermos pensar o fluxo de trabalho com Quarto com enfoque específico nos passos de criação e renderização de um documento, oferecendo um guia passo a passo um pouco mais sintético, podemos consider a ilustração da Figura 6.3. Essa figura ilustra de maneira didática e sequencial as etapas que um usuário deve seguir, desde a criação do arquivo até a renderização do documento final em múltiplos formatos. Nessa imagem destacamos explicitamente a incorporação e a renderização de código R, que é software mais utilizado por pesquisadores.\n\n\n\n\n\n\nFigura 6.3: Workflow sintético do Quarto\n\n\n\n\n\n\n\n\n\nO que o ChatGPT 4o nos diz sobre a Figura 6.3?\n\n\n\n\n\n\nOpen (Abrir):\n\nPasso: Abrir um novo arquivo de tipo Quarto Document com a extensão .qmd.\nDetalhe: Este passo inicial foca na criação do arquivo fonte que será usado para todo o fluxo de trabalho subsequente.\n\nWrite (Escrever):\n\nPasso: Escrever o conteúdo usando a sintaxe compatível com o Quarto.\nDetalhe: Este passo enfatiza a fase de escrita, onde o usuário insere o texto e a estrutura básica do documento.\n\nEmbed (Incorporar):\n\nPasso: Incorporar código R que gera saída a ser incluída no relatório.\nDetalhe: Este passo mostra como os usuários podem integrar blocos de código no documento. Aqui, o exemplo específico de código R (hist(x)) é dado, o que ilustra a capacidade do Quarto de processar e renderizar código dinâmico.\n\nRender (Renderizar):\n\nPasso: Substituir o código R pela sua saída e transformar o relatório em uma apresentação de slides, PDF, HTML ou arquivo MS Word.\nDetalhe: Este passo final detalha o processo de renderização, onde o Quarto processa o código embutido, gera os resultados e cria o documento final no formato desejado.\n\n\n\n\n\nE por fim, se desejamos melhorar nosso entendimento de como utilizar o Quarto no contexto de uma pesquisa científica empírica, a Figura 6.4 enfatiza a integração da narrativa científica, código e dados, culminando na publicação de resultados. Esse fluxo de trabalho é ideal para pesquisas que requerem transparência e reprodutibilidade, permitindo que outros pesquisadores verifiquem e repliquem os resultados. A integração da narrativa científica, código e dados em um único documento facilita a manutenção e a atualização do trabalho. Além disso, a capacidade de publicar tanto em formatos estáticos quanto dinâmicos amplia o alcance e o impacto da pesquisa, atendendo a diferentes necessidades de distribuição e engajamento do público.\n\n\n\n\n\n\nFigura 6.4: Workflow de uma pesquisa empírica utilizando Quarto\n\n\n\n\n\n\n\n\n\nO que o ChatGPT 4o nos diz sobre a Figura 6.4?\n\n\n\n\n\n\nNarrativa e Código (Narrative story, Code, Data):\n\nNarrativa: A história ou o contexto da pesquisa, incluindo introdução, metodologia, resultados e discussão, é escrita em texto simples.\nCódigo: O código utilizado para análises, simulações ou geração de figuras e tabelas. Esse código pode ser gerido através de controle de versão, garantindo rastreabilidade e reprodutibilidade.\nDados: Os dados brutos ou processados usados na pesquisa, que também podem estar sob controle de versão.\n\nEdição de Texto (Text editing):\n\nEdição de Texto Plano: A narrativa e o código são combinados em um editor de texto plano, formando um documento integral que contém a descrição da pesquisa e os scripts de análise.\n\nExecução (Execute):\n\nExecutar Código: O código embutido no documento é executado, gerando saídas como gráficos, tabelas e resultados estatísticos que são automaticamente incorporados ao documento.\n\nPublicação (Publish):\n\nFolha de Estilo (Style sheet): Um template pode ser aplicado para formatar o documento de acordo com as normas de publicação ou preferências estilísticas.\nPandoc: Ferramenta usada para converter o documento em vários formatos de saída.\nResultados:\n\nArtigo PDF Estático (Scholarly PDF article): Um documento PDF pronto para submissão a revistas acadêmicas ou para distribuição formal. É um formato estático, onde o conteúdo é fixo e não interativo.\nWebsite Dinâmico (Website): Um site interativo onde os leitores podem interagir com gráficos e visualizações de dados. Este formato permite uma experiência de leitura mais envolvente.\n\n\nRenderização (quarto render):\n\nComando de Renderização: O comando quarto render é utilizado para processar o documento (projeto) e gerar as versões finais nos formatos desejados.\n\n\nFluxo de Trabalho de uma Pesquisa Empírica Hipotética:\n\nInício:\n\nComeça com a escrita da narrativa da pesquisa e o desenvolvimento do código para análise dos dados.\nOs dados são coletados e preparados, podendo ser versões controladas para assegurar integridade e reprodutibilidade.\n\nEdição e Integração:\n\nO texto da narrativa, o código e os dados são integrados em um único documento Quarto (.qmd), utilizando um editor de texto plano.\n\nExecução de Análises:\n\nO código é executado dentro do documento, gerando os resultados das análises que são automaticamente incorporados à narrativa.\n\nPreparação para Publicação:\n\nAplicação de um template para garantir que o documento final esteja formatado corretamente.\nUso do Pandoc para converter o documento em formatos de saída, tanto estáticos (PDF) quanto dinâmicos (site web interativo).\n\nPublicação e Distribuição:\n\nPDF Estático: Criado para ser submetido a revistas científicas ou compartilhado formalmente.\nWebsite Dinâmico: Disponibilizado para o público, permitindo interação com os dados e gráficos, promovendo maior engajamento e entendimento dos resultados da pesquisa.\n\n\n\n\n\n\n\n\n\nRogers, P. (2024). Best Practices for Your Confirmatory Factor Analysis: A JASP and Lavaan Tutorial. Behavior Research Methods. https://doi.org/10.3758/s13428-024-02375-7",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Documentos Reprodutíveis</span>"
    ]
  },
  {
    "objectID": "07-docker.html",
    "href": "07-docker.html",
    "title": "7  Controle de Ambiente",
    "section": "",
    "text": "Imagine a seguinte situação: você publicou uma pesquisa quantitativa, disponibilizando o código e os dados para que outros pesquisadores possam reproduzir os resultados. Um pesquisador entra em contato e diz que não conseguiu. Você como bom mineiro, responde: “Uai, comigo funcionou!”. Prestativo como é sugere para o pesquisador, da Polônia, que venha até sua casa para que você possa ajudá-lo a reproduzir os resultados, e aproveitar para tomar um café e comer um pão de queijo. O pesquisador, educadamente, responde que não pode ir até sua casa, pois está do outro lado do mundo.\nEntão, prestativo como é, você sugere que vai enviar uma imagem do seu HD para ele. O pesquisador, educadamente, responde que não pode aceitar, pois o arquivo da imagem é muito grande e ele não tem espaço suficiente para armazenar a imagem. Além do mais, ele não entende muito bem (e não tem!) a infraestrutura para pode acessar seu HD. Inclusive, ele utiliza um sistema operacional (e estrutura de hardware) diferente do seu.\nPois bem, essa situação poderia ser a única saída alguns anos atrás. No entanto, hoje em dia, com os serviços de armazenamento em nuvem, as soluções de virtualização (máquinas virtuais), containers e controle de ambiente, é possível compartilhar o ambiente de desenvolvimento de forma mais simples.\nMáquinas virtuais (VM) são ambientes que emulam um sistema operacional (SO) completo sobre um hardware físico, permitindo a execução de múltiplos sistemas operacionais em uma única máquina. Elas oferecem um alto nível de isolamento e controle, pois cada VM inclui seu próprio SO, bibliotecas e aplicativos. As VMs podem ser classificadas em dois tipos: Type 1 Hypervisor e Type 2 Hypervisor. Tipo 1 Hypervisor roda diretamente sobre o hardware, gerenciando várias VMs sem a necessidade de um SO subjacente, o que proporciona melhor desempenho e eficiência. Já o Type 2 Hypervisor roda sobre um SO existente, sendo menos eficiente, mas mais fácil de configurar e utilizar em ambientes de desktop Figura 7.1.\n\n\n\n\n\n\nFigura 7.1: Soluções para controle do ambiente de desenvolvimento. Ilustração disponível em: https://doi.org/10.5281/zenodo.12521134\n\n\n\nExemplos de soluções de virtualização Tipo 1 podemos elencar:\n\nVMware ESXi: Uma solução comercial amplamente utilizada em ambientes corporativos para criar e gerenciar VMs. Oferece alta performance e várias funcionalidades avançadas de gerenciamento.\nMicrosoft Hyper-V: Integrado ao Windows, é uma solução comercial que também pode ser usada gratuitamente com recursos limitados. Hyper-V é amplamente utilizado em ambientes Windows.\nXen: Uma solução open-source popular em ambientes de nuvem, como o Amazon Web Services (AWS). Xen é altamente eficiente e suportado por várias distribuições Linux.\n\nExemplos de Tipo 2 incluem:\n\nVMware Workstation: Uma solução comercial usada principalmente em desktops e laptops para executar múltiplos SOs. VMware Workstation é conhecido pela sua estabilidade e facilidade de uso. Recentemente ele passou a ser gratuito.\nOracle VirtualBox: Uma solução open-source amplamente utilizada para virtualização em desktops. VirtualBox é gratuito e suporta uma vasta gama de SOs convidados.\nParallels Desktop: Uma solução comercial popular entre usuários de Mac, permitindo que eles rodem Windows, Linux e outros no macOS de maneira integrada.\n\nAs vantagens das VMs incluem um alto isolamento e segurança, além da flexibilidade para rodar diferentes SOs. No entanto, elas consomem muitos recursos, como CPU, memória e armazenamento, e as imagens são grandes e difíceis de compartilhar (Clyburne-Sherin et al., 2019). Nesse sentido, para a reprodutibilidade das pesquisas empíricas no ambito da Ciência Aberta o emprego de VMs pode ser impraticável. Para nosso dia a dia enquanto pesquisadores e professores pode ser uma ferramenta extremamente últil. Esse curso está organizado dentro de uma VM.\nPor outro lado, os containers são uma tecnologia de virtualização a nível de SO, mais leve que as VMs, que compartilham o mesmo kernel do SO hospedeiro, mas ainda assim oferecem isolamento para aplicações. Docker, Kunernetes e OpenShift são uma das ferramentas mais populares para criar e gerenciar containers. Ao contrário das VMs, os containers contêm apenas a aplicação e suas dependências, compartilhando o kernel do SO hospedeiro. Isso torna os containers mais leves e eficientes em termos de recursos, além de serem rápidos na inicialização e execução. Além disso, são fáceis de distribuir e compartilhar (Clyburne-Sherin et al., 2019).\nEnquanto as VMs oferecem maior isolamento, os containers têm menor consumo de recursos e são mais práticos para desenvolvimento e distribuição de aplicações. No entanto, eles compartilham o kernel do SO hospedeiro, o que resulta em menor isolamento comparado às VMs. Os contêineres estão ganhando força na pesquisa científica (Moreau et al., 2023) e o Docker despontado como uma das soluções mais populares para controle de ambiente em pesquisas empíricas quantitativas (Wiebels & Moreau, 2021).\nPor fim, temos as ferramentas de controle de ambiente como Conda e renv, que ajudam a gerenciar pacotes e dependências em ambientes de desenvolvimento, sem a necessidade de virtualização. Conda, por exemplo, gerencia pacotes, dependências e ambientes virtuais para linguagens como Python e R, permitindo criar ambientes isolados com versões específicas de pacotes e dependências. Já o renv (R Environment) é específico para projetos R, criando um ambiente de desenvolvimento reproduzível.\nEssas ferramentas oferecem a vantagem de menor sobrecarga de recursos e são fáceis de configurar e utilizar, promovendo a reprodutibilidade de ambientes de desenvolvimento para linguagens específicas. No entanto, oferecem menor isolamento comparado às VMs e containers e dependem da compatibilidade do sistema operacional e das versões dos pacotes.\nA recomendação para os pesquisadores que desejem terem seus trabalhos transparentes e reprodutíveis é que eles entendam das duas últimas soluções, por exemplo, num ambiente R, de containers + renv. Na verdade, essas duas soluções devem caminhar juntas, pois no contexto da maioria dos workflows (pipelines) de pesquisa a construção de containers é facilitada pela aplicação correta dos pacotes de controle de ambiente (Conda, renv, etc.).\nNo entanto, a computação em nuvens também nos agraciou com outras soluções que facilitam a reprodutibilidade, transparência e colaboração em pesquisas empíricas. Plataformas de notebooks na nuvem como Google Colab e Posit Cloud (anteriormente conhecido como RStudio Cloud) permitem compartilhar notebooks rodando num mesmo hardware, mas os usuários precisam garantir que as dependências e versões de pacotes sejam corretamente especificadas e gerenciadas.\nNo JupyterHub temos proposta parecida, mas ele nos dá um controle melhor sobre o ambiente, já que um administrador pode configurar e manter as dependências necessárias de um projeto colaborativo. O Binder é uma plataforma open-source que transforma repositórios Git em ambientes executáveis, focando principalmente em notebooks Jupyter. Ele facilita a execução de notebooks a partir de repositórios Git e garante que as dependências especificadas no repositório sejam instaladas, mas depende da configuração correta dos arquivos de dependências.\nO Code Ocean e Nextjournal são soluções específicas para a reprodutibilidade de pesquisas científicas, focando na facilidade de uso e na acessibilidade para a comunidade acadêmica. O Code Ocean permite que os cientistas agrupem código, dados, resultados, metadados e um ambiente computacional em um único lugar — chamado de “cápsula”, cujos resultados podem ser reproduzidos por qualquer pessoa num simples botão (Clyburne-Sherin et al., 2019). O Nextjournal é uma plataforma de colaboração e publicação de notebooks interativos, que permite a execução de código em diferentes linguagens, como o Code Ocean, e a criação de artigos científicos interativos. Essas duas soluções oferecem um ambiente integrado, com interface gráfica intuitiva para configurar ambientes de desenvolvimento e execução, o que facilita para pesquisadores sem conhecimento técnico avançado. No entanto, são soluções comerciais e podem ter limitações em termos de recursos e personalização.\nAs soluções apresentadas sobrepostas à nuvem do lado direito na Figura 7.1 podem ser consideradas soluções intermediárias aos containers tradicionais, no sentido de que elas utilizam conteinerização para criar ambientes reprodutíveis, mas abstraem a complexidade técnica e fornecem interfaces mais amigáveis e específicas para a comunidade científica. Elas são ideais para pesquisadores que buscam simplicidade e reprodutibilidade sem a necessidade de se aprofundar nos detalhes técnicos dos containers. Essas plataformas tornam a poderosa tecnologia de conteinerização acessível e aplicável ao contexto da pesquisa científica.\nPodemos dizer que em termos de níveis de reprodutibilidade, Google Colab e Posit Cloud atendem a um nível básico, porque a reprodutibilidade pode ser limitada pela variabilidade das dependências das sessões e cabe ao usuário uma configuração cuidadosa dos pacotes e versões. Binder e JupyterHub fornecem um nível intermediário de reprodutibilidade, pois apesar de um melhor controle sobre o ambiente, requer configuração e manutenção adequadas das dependências. Por fim, Code Ocean e Nextjournal oferecem um alto nível de reprodutibilidade, pois são ambientes integrados para criar, executar e compartilhar projetos de pesquisa reprodutíveis.\n\n\n\n\n\n\nWiebels & Moreau (2021) Reading Note (Tip 1)\n\n\n\n\n\nO artigo de Wiebels & Moreau (2021) discute a importância e a aplicação das práticas de ciência aberta na pesquisa. Eles destacam que, desde 2019, cerca de 35% dos pesquisadores de psicologia adotaram práticas de CA, um aumento significativo em relação aos 5% de apenas cinco anos antes.\nO artigo, inicialmente, discute o pacote renv, que gerencia dependências em R armazenando o código-fonte de todos os pacotes R usados em um projeto. No entanto, eles observam que essa abordagem não lida com dependências do sistema ou dependências de outras linguagens de programação e pacotes de software.\nPara resolver essas limitações, os autores apresentam os “containers”, que permitem empacotar todo o código e dependências para garantir que as análises sejam executadas de maneira confiável em uma variedade de sistemas operacionais e versões de software. Eles descrevem a lógica por trás dos containers, o que são e os problemas práticos que podem resolver.\nOs autores explicam que o ideal é “empacotar” (isolar) todo o ambiente de computação de forma que qualquer pessoa em qualquer computador possa examinar e replicar nosso trabalho, independentemente do software instalado, drivers e sistemas operacionais. Uma maneira popular de alcançar esse objetivo é com máquinas virtuais (VMs), mas as VMs podem ficar muito grandes e lentas, o que pode tornar o compartilhamento e o uso delas impraticáveis. Os containers também isolam ambientes de computação, mas usam menos recursos do que as VMs.\nApesar de suas vantagens, a contêinerização ainda é raramente usada na psicologia, talvez por falta de conscientização ou porque o uso - e especialmente a construção - de containers pode parecer assustador para aqueles que não têm formação em ciência da computação. Para superar essa barreira, os autores usam a plataforma de contêiner Docker e se concentram na linguagem R.\nEles explicam que o Docker é um projeto de contêinerização de código aberto baseado em Linux; ou seja, o Linux está rodando dentro dos containers, mesmo que estejamos em um computador Windows ou Mac. Eles também esclarecem que um número ilimitado de containers pode ser criado a partir de uma imagem e, ao contrário das imagens, os containers podem ser modificados enquanto estão em execução.\nOs autores comparam uma imagem Docker a uma receita de bolo e o container Docker correspondente a um bolo acabado. A receita contém as instruções para fazer o bolo, pode ser usada para fazer quantos bolos você quiser e pode ser compartilhada para permitir que outros façam o mesmo bolo. Todos que usam a receita acabam com o mesmo tipo de bolo, que pode ser modificado adicionando, por exemplo, cobertura ou confeites. No entanto, sua adição de cobertura e minha adição de confeites não mudarão a receita, e da próxima vez que usarmos a receita, teremos o mesmo bolo de antes.\nOs autores escolheram usar o Docker para o tutorial por cinco razões principais. Primeiro, o Docker é uma das principais plataformas de contêiner e foi estabelecido como uma prática recomendada em vários campos de pesquisa. Segundo, o Docker funciona em todos os principais sistemas operacionais (Linux, macOS e Windows). Terceiro, os containers Docker são fáceis de usar, muito leves e rápidos. Quarto, as imagens Docker podem ser armazenadas e compartilhadas gratuitamente no registro central Docker Hub. Finalmente, graças à sua crescente popularidade, o Docker se beneficia de uma grande comunidade de usuários e um rico ecossistema de ferramentas relacionadas, como o Rocker, que fornece containers com ambientes R.\nOs autores concluem que a contêinerização é um passo importante para tornar a pesquisa reprodutível, fornecendo um ambiente de computação consistente que pode ser usado por todos os colaboradores ao longo do projeto e que pode ser compartilhado junto com a publicação. Compartilhar um container após a finalização de um projeto de pesquisa garante que suas análises sejam reprodutíveis. Nesse contexto, a proficiência em contêinerização, entre o conjunto mais amplo de ferramentas computacionais exigidas por um cientista moderno, pode se revelar um investimento valioso para cientistas comportamentais em todos os estágios de carreira.\n\n\n\n\n\n\n\nClyburne-Sherin, A., Fei, X., & Green, S. A. (2019). Computational Reproducibility via Containers in Psychology. Meta-Psychology, 3. https://doi.org/10.15626/MP.2018.892\n\n\nMoreau, D., Wiebels, K., & Boettiger, C. (2023). Containers for Computational Reproducibility. Nature Reviews Methods Primers, 3(1), 50. https://doi.org/10.1038/s43586-023-00236-9\n\n\nWiebels, K., & Moreau, D. (2021). Leveraging Containers for Reproducible Psychological Research. Advances in Methods and Practices in Psychological Science, 4(2), 251524592110178. https://doi.org/10.1177/25152459211017853",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Controle de Ambiente</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Referências",
    "section": "",
    "text": "Albano, C. S., Pedroso, P. de O., & Caetano, D. O. (2023).\nCiência Aberta: Um Panorama sobre\nas Publicações no Cenário Brasileiro. Saber\nCientífico, 12(1), 1–12.\n\n\nBaker, D. H., Berg, M., Hansford, K., Quinn, B. P. A., Segala, F. G.,\n& English, E. (2023). ReproduceMe: Lessons from a\npilot project on computational reproducibility [Preprint].\nPsyArXiv. https://doi.org/10.31234/osf.io/k8d4u\n\n\nBaker, M. (2016). 1,500 scientists lift the lid on reproducibility.\nNature, 533(7604), 452–454. https://doi.org/10.1038/533452a\n\n\nBehera, P. K., & Jain, S. J. (2023). Zotero – an open-source\nreference management software: A practical manual. OSF. https://doi.org/10.17605/OSF.IO/8S73R\n\n\nBernard, C. (2023). Stop Reproducing the\nReproducibility Crisis. Eneuro, 10(2),\nENEURO.0032–23.2023. https://doi.org/10.1523/ENEURO.0032-23.2023\n\n\nBezjak, S., Clyburne-Sherin, A., Conzett, P., Fernandes, P., Görögh, E.,\nHelbig, K., Kramer, B., Labastida, I., Niemeyer, K., Psomopoulos, F.,\nRoss-Hellauer, T., Schneider, R., Tennant, J., Verbakel, E., Brinken,\nH., & Heller, L. (2018). Open Science Training\nHandbook. Zenodo. https://doi.org/10.5281/ZENODO.1212496\n\n\nCaballero-Rivero, A., Sánchez-Tarragó, N., & Santos, R. N. M. dos.\n(2019). Práticas de Ciência Aberta da\ncomunidade acadêmica brasileira: estudo a partir da\nprodução científica.\nTransinformação, 31,\ne190029. https://doi.org/10.1590/2318-0889201931e190029\n\n\nChopik, W. J., Bremner, R. H., Defever, A. M., & Keller, V. N.\n(2018). How (and Whether) to Teach Undergraduates\nAbout the Replication Crisis in Psychological\nScience. Teaching of Psychology, 45(2),\n158–163. https://doi.org/10.1177/0098628318762900\n\n\nClyburne-Sherin, A., Fei, X., & Green, S. A. (2019). Computational\nReproducibility via Containers in\nPsychology. Meta-Psychology, 3. https://doi.org/10.15626/MP.2018.892\n\n\nCommittee on Reproducibility and Replicability in Science, Board on\nBehavioral, Cognitive, and Sensory Sciences, Committee on National\nStatistics, Division of Behavioral and Social Sciences and Education,\nNuclear and Radiation Studies Board, Division on Earth and Life Studies,\nBoard on Mathematical Sciences and Analytics, Committee on Applied and\nTheoretical Statistics, Division on Engineering and Physical Sciences,\nBoard on Research Data and Information, Committee on Science,\nEngineering, Medicine, and Public Policy, Policy and Global Affairs,\n& National Academies of Sciences, Engineering, and Medicine. (2019).\nReproducibility and Replicability in\nScience (p. 25303). National Academies Press. https://doi.org/10.17226/25303\n\n\nCrüwell, S., Van Doorn, J., Etz, A., Makel, M. C., Moshontz, H.,\nNiebaum, J. C., Orben, A., Parsons, S., & Schulte-Mecklenbeck, M.\n(2019). Seven Easy Steps to Open Science:\nAn Annotated Reading List. Zeitschrift für\nPsychologie, 227(4), 237–248. https://doi.org/10.1027/2151-2604/a000387\n\n\nDogucu, M., & Çetinkaya-Rundel, M. (2022). Tools and\nRecommendations for Reproducible Teaching.\nJournal of Statistics and Data Science Education,\n30(3), 251–260. https://doi.org/10.1080/26939169.2022.2138645\n\n\nEuropean Commission. Directorate General for Research and Innovation.\n(2017). Providing researchers with the skills and competencies they\nneed to practise Open Science. Publications Office. https://data.europa.eu/doi/10.2777/121253\n\n\nFanelli, D. (2018). Is science really facing a reproducibility crisis,\nand do we need it to? Proceedings of the National Academy of\nSciences, 115(11), 2628–2631. https://doi.org/10.1073/pnas.1708272114\n\n\nFreedman, L. P., Cockburn, I. M., & Simcoe, T. S. (2015). The\nEconomics of Reproducibility in\nPreclinical Research. PLOS Biology,\n13(6), e1002165. https://doi.org/10.1371/journal.pbio.1002165\n\n\nGilroy, S. P., & Kaplan, B. A. (2019). Furthering Open\nScience in Behavior Analysis: An\nIntroduction and Tutorial for Using\nGitHub in Research. Perspectives on Behavior\nScience, 42(3), 565–581. https://doi.org/10.1007/s40614-019-00202-5\n\n\nHeinz, M., & Miranda, M. (2024). Ciência\nAberta: Argumentos e desafios para sua\nlegitimação científica. Em\nQuestão, 30. https://doi.org/10.1590/1808-5245.30.135618\n\n\nJanz, N. (2015). Bringing the Gold Standard into the\nClassroom: Replication in University\nTeaching. International Studies Perspectives, n/a–n/a.\nhttps://doi.org/10.1111/insp.12104\n\n\nKathawalla, U.-K., Silverstein, P., & Syed, M. (2021). Easing\nInto Open Science: A Guide for Graduate\nStudents and Their Advisors. Collabra:\nPsychology, 7(1), 18684. https://doi.org/10.1525/collabra.18684\n\n\nKlein, O., Hardwicke, T. E., Aust, F., Breuer, J., Danielsson, H., Mohr,\nA. H., IJzerman, H., Nilsonne, G., Vanpaemel, W., & Frank, M. C.\n(2018). A Practical Guide for Transparency in\nPsychological Science. Collabra: Psychology,\n4(1), 20. https://doi.org/10.1525/collabra.158\n\n\nMcAleer, P., Stack, N., Woods, H., DeBruine, L. M., Paterson, H.,\nNordmann, E., Kuepper-Tetzel, C. E., & Barr, D. J. (2022).\nEmbedding Data Skills in Research Methods\nEducation: Preparing Students for Reproducible\nResearch [Preprint]. PsyArXiv. https://doi.org/10.31234/osf.io/hq68s\n\n\nMendes-Da-Silva, W. (2023). What Lectures and\nResearch in Business Management Need to\nKnow About Open Science. Revista de\nAdministração de Empresas,\n63(4), e0000–0033. https://doi.org/10.1590/s0034-759020230408x\n\n\nMoreau, D., Wiebels, K., & Boettiger, C. (2023). Containers for\ncomputational reproducibility. Nature Reviews Methods Primers,\n3(1), 50. https://doi.org/10.1038/s43586-023-00236-9\n\n\nMunafò, M. R., Nosek, B. A., Bishop, D. V. M., Button, K. S., Chambers,\nC. D., Percie Du Sert, N., Simonsohn, U., Wagenmakers, E.-J., Ware, J.\nJ., & Ioannidis, J. P. A. (2017). A manifesto for reproducible\nscience. Nature Human Behaviour, 1(1), 0021. https://doi.org/10.1038/s41562-016-0021\n\n\nNeto, S. C., Willinsky, J., & Alperin, J. P. (2016). Measuring,\nrating, supporting, and strengthening open access scholarly publishing\nin Brazil. Education Policy Analysis Archives,\n24, 54–54. https://doi.org/10.14507/epaa.24.2391\n\n\nOddone, N., & Souza, L. V. R. L. (2024). Acesso ao conhecimento no\ncontexto da ciência aberta: O segredo da popularidade do sci-hub.\nRevista Digital de Biblioteconomia e Ciência Da Informação,\n22. https://doi.org/https://doi.org/10.20396/rdbci.v22i00.8673883\n\n\nOlson, E., Pfeiffer, N., Call, M., & Steger, D. (2022). Getting\nstarted on OSF. https://doi.org/10.17605/OSF.IO/YAQE8\n\n\nProske, A., Wenzel, C., & Queitsch, M. B. (2023). Reference\nmanagement systems. In O. Kruse, C. Rapp, C. M. Anson, K. Benetos, E.\nCotos, A. Devitt, & A. Shibani (Eds.), Digital writing\ntechnologies in higher education (pp. 215–230). Springer\nInternational Publishing. https://doi.org/10.1007/978-3-031-36033-6_14\n\n\nProtzko, J., Krosnick, J., Nelson, L., Nosek, B. A., Axt, J., Berent,\nM., Buttrick, N., DeBell, M., Ebersole, C. R., Lundmark, S., MacInnis,\nB., O’Donnell, M., Perfecto, H., Pustejovsky, J. E., Roeder, S. S.,\nWalleczek, J., & Schooler, J. W. (2023). High replicability of newly\ndiscovered social-behavioural findings is achievable. Nature Human\nBehaviour. https://doi.org/10.1038/s41562-023-01749-9\n\n\nRam, K. (2013). Git can facilitate greater reproducibility and increased\ntransparency in science. Source Code for Biology and Medicine,\n8(7), 8. https://doi.org/10.1186/1751-0473-8-7\n\n\nRezende, L. V. R., & Falgueras, E. A. (2020). Estado da arte dos\nmarcos regulatórios brasileiros rumo à Ciência Aberta. Encontros Bibli: Revista\nEletrônica de Biblioteconomia e Ciência Da\nInformação, 25, 01–25. https://doi.org/10.5007/1518-2924.2020.e71370\n\n\nRogers, P. (2024). Best practices for your confirmatory factor analysis:\nA JASP and lavaan tutorial. Behavior Research\nMethods. https://doi.org/10.3758/s13428-024-02375-7\n\n\nSilva, F. C. C. D., & Silveira, L. D. (2019). O ecossistema da Ciência Aberta.\nTransinformação, 31,\ne190001. https://doi.org/10.1590/2318-0889201931e190001\n\n\nSilveira, L. D., Calixto Ribeiro, N., Melero, R., Mora-Campos, A.,\nPiraquive-Piraquive, D. F., Uribe Tirado, A., Machado Borges Sena, P.,\nPolanco Cortés, J., Santillán-Aldana, J., Couto Corrêa Da Silva, F.,\nFerreira Araújo, R., Enciso Betancourt, A. M., & Fachin, J. (2023).\nTaxonomia da Ciência\nAberta: Revisada e ampliada. Encontros Bibli: Revista\nEletrônica de Biblioteconomia e Ciência Da\nInformação, 28. https://doi.org/10.5007/1518-2924.2023.e91712\n\n\nSoderberg, C. K. (2018). Using OSF to share data: A step-by-step guide.\nAdvances in Methods and Practices in Psychological Science,\n1(1), 115–120. https://doi.org/10.1177/2515245918757689\n\n\nSullivan, I., DeHaven, A., & Mellor, D. (2019). Open and\nreproducible research on open science framework. Current Protocols\nEssential Laboratory Techniques, 18(1), e32. https://doi.org/10.1002/cpet.32\n\n\nThomas, P. A. (2023). Using zotero for citation management: A\nstep-by-step guide to organizing and citing your research.\nUniversity of Kansas Libraries. https://kuscholarworks.ku.edu/handle/1808/34983\n\n\nToelch, U., & Ostwald, D. (2018). Digital open\nscience—Teaching digital tools for reproducible and\ntransparent research. PLOS Biology, 16(7), e2006022.\nhttps://doi.org/10.1371/journal.pbio.2006022\n\n\nUNESCO. (2021). UNESCO Recommendation on Open\nScience. UNESCO. https://doi.org/10.54677/MNMH8546\n\n\nVicente-Saez, R., & Martinez-Fuentes, C. (2018). Open\nScience now: A systematic literature review\nfor an integrated definition. Journal of Business Research,\n88, 428–436. https://doi.org/10.1016/j.jbusres.2017.12.043\n\n\nVuorre, M., & Curley, J. P. (2018). Curating Research\nAssets: A Tutorial on the Git Version Control\nSystem. Advances in Methods and Practices in Psychological\nScience, 1(2), 219–236. https://doi.org/10.1177/2515245918754826\n\n\nWiebels, K., & Moreau, D. (2021). Leveraging Containers\nfor Reproducible Psychological Research. Advances in\nMethods and Practices in Psychological Science, 4(2),\n251524592110178. https://doi.org/10.1177/25152459211017853",
    "crumbs": [
      "Referências"
    ]
  }
]